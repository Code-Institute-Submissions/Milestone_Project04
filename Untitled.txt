import os
from flask import Flask, render_template,redirect, session, request, url_for
from flask_pymongo import PyMongo
from bson.objectid import ObjectId
import bcrypt 

app = Flask(__name__)
app.config["MONGO_DBNAME"] = 'recipe_site'
app.config["MONGO_URI"] = 'mongodb+srv://pablolhp:Gavioes13@myfirstcluster-fwrws.mongodb.net/recipe_site?retryWrites=true&w=majority'

mongo = PyMongo(app)

@app.route('/')
@app.route('/index')
def index():
    if 'username' in session:
        
        return 'You are logged  in as '+ session, render_template("index.html",
                                recipes=mongo.db.recipes.find())
    return render_template("index.html",
                                recipes=mongo.db.recipes.find())
@app.route('/login',methods=['GET'])
def login():
    users = mongo.db.users
    login_user = users.find_one({'name' : request.form['username']})

    if login_user:
        if bcrypt.hashpw(request.form['pass'].encode('utf-8'), login_user['password'].encode('utf-8')) == login_user['password'].encode('utf-8'):
            session['username'] = request.form['username']
            return redirect(url_for('index'))
        
    return 'Invalid username/password combination'
        


@app.route('/register', methods=['POST','GET'])
def register():
    if request.method =='POST':
        users = mongo.db.users
        existing_user = users.find_one({'name' : request.form['username']})

        if existing_user is None:
            hashpass = bcrypt.hashpw(request.form['pass'].encode('utf-8'), bcrypt.gensalt())
            users.insert({'name' : request.form['username'], 'password' : hashpass})
            session['username'] = request.form['username']
            return redirect(url_for('index'))
        
        return 'That username already exists!'

    return render_template('register.html')

    
@app.route('/logout')
def logout():
    #  logout user and clear session
    session['email'] = None
    session['password'] = None
    # session.clear()
    return redirect(url_for('index'))


@app.route('/add_recipe')
def add_recipe():
    return render_template("addrecipe.html",
                            categories=mongo.db.diet.find(), cosine=mongo.db.cuisine.find(), allergen=mongo.db.allergen.find())

@app.route('/insert_recipe', methods=['POST'])
def insert_recipe():
    recipes=mongo.db.recipes
    recipes.insert_one(request.form.to_dict())
    return redirect(url_for('index'))



    
if __name__ == '__main__':
    app.secret_key = 'super secret key'
    app.run(host=os.environ.get('IP', '0.0.0.0'),
            port=int(os.environ.get('PORT', '5000')),
            debug=True)